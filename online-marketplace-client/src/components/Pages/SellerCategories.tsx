import React, { useEffect, useState } from 'react';
import {
    Paper,
    Typography,
    Box,
    List,
    ListItem,
    ListItemText,
    IconButton,
    Alert
} from '@mui/material';
import DeleteIcon from '@mui/icons-material/Delete';
import { useAuth } from '../../contexts/AuthContext';
import AddCategoryForm from './AddCategoryForm';
/**
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
 */
interface Category {
    id: number;
    name: string;
    description: string;
    parentCategoryId: number | null;
}
/**
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å–≤—è–∑–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
 */

interface UserCategory {
    userId: string;
    categoryId: number;
}
/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –ø—Ä–æ–¥–∞–≤—Ü–∞.
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∏–π —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–¥–∞–ª—è—Ç—å –∏–ª–∏ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ.
 *
 * @component
 * @example
 * return <SellerCategories />;
 */
const SellerCategories: React.FC = () => {
    const { userId } = useAuth();

    const [allCategories, setAllCategories] = useState<Category[]>([]);
    const [myCategories, setMyCategories] = useState<UserCategory[]>([]);
    const [message, setMessage] = useState('');

    useEffect(() => {
        loadAll();
    }, []);
    /**
     * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —Ç–µ–∫—É—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
     */
    const loadAll = async () => {
        const [allRes, userRes] = await Promise.all([
            fetch('/api/category'),
            fetch('/api/usercategory/my')
        ]);

        const all = await allRes.json();
        const mine = await userRes.json();
        setAllCategories(all);
        setMyCategories(mine);
    };
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ ID.
     * @param categoryId ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     */
    const handleDelete = async (categoryId: number) => {
        if (!window.confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç—É –∫–∞—Ç–µ–≥–æ—Ä–∏—é?')) return;

        const res = await fetch(`/api/category/${categoryId}`, {
            method: 'DELETE'
        });

        if (res.ok) {
            setMessage('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —É–¥–∞–ª–µ–Ω–∞');
            await loadAll(); // üëà –≤–æ—Ç —ç—Ç–∞ —Å—Ç—Ä–æ–∫–∞ –æ–±–Ω–æ–≤–∏—Ç UI
        } else {
            const err = await res.text();
            setMessage(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: ${err}`);
        }
    };

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ —Ç–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–π, –∫–æ—Ç–æ—Ä—ã–µ —Å–≤—è–∑–∞–Ω—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    const myCategoryIds = myCategories.map((uc) => uc.categoryId);
    const myCategoryObjects = allCategories.filter((cat) => myCategoryIds.includes(cat.id));
    /**
     * –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥–µ—Ä–µ–≤–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø—Ä–æ–¥–∞–≤—Ü–∞.
     * @param parentId –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∏–ª–∏ null
     * @param level –ì–ª—É–±–∏–Ω–∞ –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏
     */
    const renderCategoryTree = (parentId: number | null = null, level = 0) => {
        return myCategoryObjects
            .filter(cat => cat.parentCategoryId === parentId)
            .map(cat => (
                <ListItem key={cat.id} secondaryAction={
                    <IconButton edge="end" onClick={() => handleDelete(cat.id)}>
                        <DeleteIcon />
                    </IconButton>
                }>
                    <ListItemText
                        primary={`${'‚Äî '.repeat(level)}${cat.name}`}
                        secondary={cat.description}
                    />
                    {renderCategoryTree(cat.id, level + 1)}
                </ListItem>
            ));
    };

    return (
        <Paper sx={{ padding: 4 }}>
            <Typography variant="h6" gutterBottom>
                –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ–¥–∞–≤—Ü–∞
            </Typography>

            <List>
                {renderCategoryTree()}
            </List>

            {message && (
                <Alert sx={{ mt: 2 }} severity={message.startsWith('‚úÖ') ? 'success' : 'error'}>
                    {message}
                </Alert>
            )}

            <AddCategoryForm onCreated={loadAll} />
        </Paper>
    );
};

export default SellerCategories;
