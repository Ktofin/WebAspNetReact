import React, { Component, ReactNode } from "react";
import { Typography, Box, Button } from "@mui/material";
/**
 * –ü—Ä–æ–ø—Å—ã –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ ErrorBoundary.
 * @property {ReactNode} children - –í–ª–æ–∂–µ–Ω–Ω—ã–µ –¥–æ—á–µ—Ä–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞—â–∏—â–∞—é—Ç—Å—è –æ—Ç –æ—à–∏–±–æ–∫.
 */
interface ErrorBoundaryProps {
    children: ReactNode;
}
/**
 * –°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ ErrorBoundary.
 * @property {boolean} hasError - –§–ª–∞–≥, –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∏–π, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –ª–∏ –æ—à–∏–±–∫–∞.
 */
interface ErrorBoundaryState {
    hasError: boolean;
}
/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç-–æ–±—ë—Ä—Ç–∫–∞ –¥–ª—è –æ—Ç–ª–æ–≤–∞ –æ—à–∏–±–æ–∫ –≤ React.
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫—Ä–∞—Ö–∞ –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –≤ –æ–¥–Ω–æ–º –∏–∑ –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤.
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç fallback-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
 *
 * @example
 * <ErrorBoundary>
 *   <SomeComponent />
 * </ErrorBoundary>
 */

class ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {
    constructor(props: ErrorBoundaryProps) {
        super(props);
        this.state = { hasError: false };
    }
    /**
     * –ú–µ—Ç–æ–¥ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ React, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –æ—à–∏–±–∫–∏ –≤ –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö.
     * @returns {ErrorBoundaryState} –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å —Ñ–ª–∞–≥–æ–º –æ—à–∏–±–∫–∏.
     */
    static getDerivedStateFromError(_: Error): ErrorBoundaryState {
        return { hasError: true };
    }
    /**
     * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–µ–π –≤ –∫–æ–Ω—Å–æ–ª—å.
     * @param {Error} error - –°–∞–º –æ–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏.
     * @param {React.ErrorInfo} errorInfo - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ.
     */
    componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {
        console.error("Uncaught error:", error, errorInfo);
    }
    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û–±–Ω–æ–≤–∏—Ç—å".
     */
    handleReload = () => {
        window.location.reload();
    };

    render() {
        if (this.state.hasError) {
            return (
                <Box sx={{ p: 4, textAlign: "center" }}>
                    <Typography variant="h5" gutterBottom>
                        –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üò•
                    </Typography>
                    <Typography variant="body1" gutterBottom>
                        –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.
                    </Typography>
                    <Button variant="contained" onClick={this.handleReload}>
                        üîÑ –û–±–Ω–æ–≤–∏—Ç—å
                    </Button>
                </Box>
            );
        }

        return this.props.children;
    }
}

export default ErrorBoundary;
